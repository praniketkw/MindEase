{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "mindease",
      "metadata": {
        "description": "Base name for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "production",
      "allowedValues": [
        "development",
        "staging",
        "production"
      ],
      "metadata": {
        "description": "Environment name"
      }
    },
    "githubRepositoryUrl": {
      "type": "string",
      "metadata": {
        "description": "GitHub repository URL for Static Web App"
      }
    },
    "githubBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "GitHub branch for deployment"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
    "keyVaultName": "[concat(parameters('appName'), '-kv-', variables('uniqueSuffix'))]",
    "openAIServiceName": "[concat(parameters('appName'), '-openai-', variables('uniqueSuffix'))]",
    "languageServiceName": "[concat(parameters('appName'), '-language-', variables('uniqueSuffix'))]",
    "contentSafetyServiceName": "[concat(parameters('appName'), '-safety-', variables('uniqueSuffix'))]",
    "speechServiceName": "[concat(parameters('appName'), '-speech-', variables('uniqueSuffix'))]",
    "storageAccountName": "[concat(parameters('appName'), 'storage', variables('uniqueSuffix'))]",
    "staticWebAppName": "[concat(parameters('appName'), '-swa-', variables('uniqueSuffix'))]",
    "tags": {
      "project": "mindease",
      "environment": "[parameters('environment')]",
      "deployedBy": "ARM-template"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enableRbacAuthorization": true,
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('openAIServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "customSubDomainName": "[variables('openAIServiceName')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('languageServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "S"
      },
      "kind": "TextAnalytics",
      "properties": {
        "customSubDomainName": "[variables('languageServiceName')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('contentSafetyServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "S0"
      },
      "kind": "ContentSafety",
      "properties": {
        "customSubDomainName": "[variables('contentSafetyServiceName')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('speechServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "S0"
      },
      "kind": "SpeechServices",
      "properties": {
        "customSubDomainName": "[variables('speechServiceName')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-03-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "[parameters('githubRepositoryUrl')]",
        "branch": "[parameters('githubBranch')]",
        "buildProperties": {
          "appLocation": "/frontend",
          "apiLocation": "/backend",
          "outputLocation": "build"
        }
      }
    }
  ],
  "outputs": {
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "openAIEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))).endpoint]"
    },
    "languageEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('languageServiceName'))).endpoint]"
    },
    "contentSafetyEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('contentSafetyServiceName'))).endpoint]"
    },
    "speechRegion": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[variables('staticWebAppName')]"
    },
    "staticWebAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))).defaultHostname]"
    }
  }
}